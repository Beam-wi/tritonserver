# Copyright (c) 2020, NVIDIA CORPORATION. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

name: "ragged_element_count_acc_zero"
platform: "tensorrt_plan"
max_batch_size: 4
input [
  {
    name: "RAGGED_INPUT"
    data_type: TYPE_FP32
    dims: [ -1 ]
    allow_ragged_batch: true
  }
]
output [
  {
    name: "RAGGED_OUTPUT"
    data_type: TYPE_FP32
    dims: [ -1 ]
  }
]
output [
  {
    name: "BATCH_AND_SIZE_OUTPUT"
    data_type: TYPE_FP32
    dims: [ -1 ]
  }
]
output [
  {
    name: "BATCH_OUTPUT"
    data_type: TYPE_FP32
    dims: [ -1 ]
  }
]
batch_input [
  {
    kind: BATCH_ELEMENT_COUNT
    target_name: "BATCH_AND_SIZE_INPUT"
    data_type: TYPE_FP32
    source_input: "RAGGED_INPUT"
  },
  {
    kind: BATCH_ACCUMULATED_ELEMENT_COUNT_WITH_ZERO
    target_name: "BATCH_INPUT"
    data_type: TYPE_FP32
    source_input: "RAGGED_INPUT"
  }
]
dynamic_batching {
  max_queue_delay_microseconds: 1000000
}
